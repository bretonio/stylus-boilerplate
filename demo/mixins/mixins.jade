//
	stylus-boilerplate
	File Name: mixins
	Author: _admin
	Date: 2014-12-23
	Description: Utilities for rendering demos

mixin getIcon(icon, title)
	span(class="icon-#{icon}", title="#{title}", role="presentation")
		span.icon-description= title

mixin getNavItem(link, title, icon)
	- defaultClassName = "nav-item-link"
	if attributes.class
		- classNames = defaultClassName + "-" + attributes.class
	else
		- classNames = defaultClassName
	a(href=link, title=title, class=classNames)
		+getIcon(icon, title)
		| &nbsp;#{title}

mixin renderNavBar(items, layout)
	- className = "nav-" + layout
	nav(class=className, role="navigation")
		ul.nav-items
			+renderNavItems(items)

mixin renderNavItems(navItems)
	each item in navItems
		if item.nestedMenu
			li(class="nav-item dropdown")
				+getNavItem(item.url || "#", item.title, item.icon)
				ul.dropdown-menu
					+renderNavItems(item.nestedMenu)
		else
			li.nav-item
				+getNavItem(item.url || "#", item.title, item.icon)

mixin getFormSection(title, icon)
	- var className = "form-section"
	if attributes.class
		- className += "-" + attributes.class
	fieldset(class=className)
		legend.form-section-title
			+getIcon(icon, title)
			| #{title}
		if block
			block
mixin getButton(text, title, className, icon)
	if className
		- className = "button-" + className
	else
		- className = "button"
	if !title
		- title = text
	button(type="button", title=title, class=className disabled!=attributes.disabled)= text
		if icon
			| &nbsp;
			+getIcon(icon)

mixin getFormField(name)
	if attributes.class
		- classNames = "form-field-" + attributes.class
	else
		- classNames = "form-field"
	- var labelID = name.trim().replace(/([A-Z])/g, '-$1').replace(/[-_\s]+/g, '-').toLowerCase()
	section(class=classNames)
		label.form-field-label(for=labelID) #{name}
		.form-field-controls
			if attributes.appended
				.form-field-controls-group
					if block
						block
			else
				if block
					block
mixin getFormInput(name, type, id, options)
	- message = "Please enter " + name
	if !id
		- id = name.trim().replace(/([A-Z])/g, '-$1').replace(/[-_\s]+/g, '-').toLowerCase()
	if type == "select"
		select(class!=attributes.class, id=id)
			for option in options
				option(value=option.value, selected!=option.selected)= option.name
	else if type == "textarea"
		textarea(class!=attributes.class, id=id, rows="5", placeholder=name, pattern!=attributes.pattern, required!=attributes.required, autofocus!=attributes.autofocus, title=message)
	else
		input(class!=attributes.class, type=type, id=id, placeholder=name, pattern!=attributes.pattern, required!=attributes.required, min!=attributes.min, max!=attributes.max, step!=attributes.step, autofocus!=attributes.autofocus, list!=attributes.list, title=message)

mixin getFormAction(name, title, icon)
	button.button.form-action(type="submit", title=title class!=attributes.class) #{name}
		if icon
			| &nbsp;
			+getIcon(icon, title)
mixin demoSection(name)
	section.demo
		header
			h1= name
		if block
			div.demo-content
				block

mixin getAppendedControl(control, id)
	- var classNames = ["form-field-controls-group-append"]
	if control.classNames
		- classNames.push(control.classNames)
	label(for=id, class=classNames)
		if control.text
			| #{control.text}
		if control.icon
			+getIcon(control.icon)
mixin getAppendedControls(field, id)
	if field.appended
		if field.appended.before
			+getAppendedControl(field.appended.before, id)(class!=attributes.class)
	if block
		block
	if field.appended
		if field.appended.after
			+getAppendedControl(field.appended.after, id)(class!=attributes.class)
mixin renderFieldset(form)
	+getFormSection(form.name)(class!=form.layout)
		if form.fields.length
			for field in form.fields
				- id = field.name.trim().replace(/([A-Z])/g, '-$1').replace(/[-_\s]+/g, '-').toLowerCase()
				if field.appended
					- appended = true
				+getFormField(field.name)(class!=field.layout, appended!=appended)
					+getAppendedControls(field, id)
						+getFormInput(field.name, field.type, null, field.options)(required="required", list=field.datalist, min!=field.min, max!=field.max, step!=field.step)
		if form.actions
			footer.form-actions
				for action in form.actions
					+getFormAction(action.name, action.title, action.icon)
mixin getDatalist(list, id)
	datalist(id=id)
		each item in list
			option(value=item)= item
