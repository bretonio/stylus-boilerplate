// Generated by CoffeeScript 1.7.1

/*
	stylus-boilerplate

	gulpfile.coffee

	@author Sean

	@note Created on 2014-08-23 by PhpStorm
	@note uses Codoc
	@see https://github.com/coffeedoc/codo
 */

(function() {
  "use strict";
  var $, gulp;

  gulp = require("gulp");

  $ = require("gulp-load-plugins")();

  gulp.task("styles", function() {
    return gulp.src("app/styles/css/stylus-boilerplate.css").pipe($.stylus()).pipe(gulp.dest(".tmp/styles/css")).pipe($.size());
  });

  gulp.task("scripts", function() {
    return gulp.src("app/scripts/**/*.js").pipe($.jshint()).pipe($.jshint.reporter(require("jshint-stylish"))).pipe($.size());
  });

  gulp.task("html", ["styles", "scripts"], function() {
    var cssFilter, jsFilter;
    jsFilter = $.filter("**/*.js");
    cssFilter = $.filter("**/*.css");
    return gulp.src("app/*.html").pipe($.useref.assets({
      searchPath: "{.tmp,app}"
    })).pipe(jsFilter).pipe($.uglify()).pipe(jsFilter.restore()).pipe(cssFilter).pipe($.csso()).pipe(cssFilter.restore()).pipe($.useref.restore()).pipe($.useref()).pipe(gulp.dest("dist")).pipe($.size());
  });

  gulp.task("images", function() {
    return gulp.src("app/assets/images/**/*").pipe($.cache($.imagemin({
      optimizationLevel: 3,
      progressive: true,
      interlaced: true
    }))).pipe(gulp.dest("dist/assets/images")).pipe($.size());
  });

  gulp.task("fonts", function() {
    return $.bowerFiles().pipe($.filter("**/*.{eot,svg,ttf,woff}")).pipe($.flatten()).pipe(gulp.dest("dist/assets/fonts")).pipe($.size());
  });

  gulp.task("extras", function() {
    return gulp.src(["app/*.*", "!app/*.html"], {
      dot: true
    }).pipe(gulp.dest("dist"));
  });

  gulp.task("clean", function() {
    return gulp.src([".tmp", "dist"], {
      read: false
    }).pipe($.clean());
  });

  gulp.task("build", ["html", "images", "fonts", "extras"]);

  gulp.task("default", ["clean"], function() {
    return gulp.start("build");
  });

  gulp.task("connect", function() {
    var app, connect;
    connect = require("connect");
    app = connect().use(require("connect-livereload")({
      port: 35729
    })).use(connect["static"]("app")).use(connect["static"](".tmp")).use(connect.directory("app"));
    return require("http").createServer(app).listen(9000).on("listening", function() {
      return console.log("Started connect web server on http://localhost:9000");
    });
  });

  gulp.task("serve", ["connect"], function() {
    return require("opn")("http://localhost:9000");
  });

  gulp.task("wiredep", function() {
    var wiredep;
    wiredep = require("wiredep").stream;
    return gulp.src("app/*.html").pipe(wiredep({
      directory: "app/bower_components"
    })).pipe(gulp.dest("app"));
  });

  gulp.task("watch", ["connect", "serve"], function() {
    var server;
    server = $.livereload();
    gulp.watch(["app/*.html", ".tmp/styles/css/**/*.css", "app/scripts/**/*.js", "app/assets/images/**/*"]).on("change", function(file) {
      return server.changed(file.path);
    });
    gulp.watch("app/styles/**/*.css", ["styles"]);
    gulp.watch("app/scripts/**/*.js", ["scripts"]);
    gulp.watch("app/assets/images/**/*", ["images"]);
    return gulp.watch("bower.json", ["wiredep"]);
  });

}).call(this);

//# sourceMappingURL=gulpfile.map
